swagger: '2.0'
info:
  title: JTHub Job Execution Scheduling Service API
  version: "0.1"
consumes:
  - application/json
produces:
  - application/json
security:
  # enable OAuth protection for all REST endpoints
  # (only active if the TOKENINFO_URL environment variable is set)
  - oauth2: [uid]
paths:
  /job_queues/{owner_name}:
    get:
      tags: [Job Queues]
      operationId: app.get_job_queues1
      summary: Get all job queues under a given owner
      parameters:
        - $ref: '#/parameters/owner_name'
      responses:
        200:
          description: Return job queues for the specified owner
          schema:
            type: array
  /job_queues/{owner_name}/{workflow_name}:
    get:
      tags: [Job Queues]
      operationId: app.get_job_queues2
      summary: Get all job queues under a given owner and workflow_name
      parameters:
        - $ref: '#/parameters/owner_name'
        - $ref: '#/parameters/workflow_name'
      responses:
        200:
          description: Return job queues for a given owner and workflow_name
          schema:
            type: array
  /job_queues/{owner_name}/{workflow_name}/{workflow_version}:
    get:
      tags: [Job Queues]
      operationId: app.get_job_queues
      summary: Get all job queues for given owner, workflow_name and version
      parameters:
        - $ref: '#/parameters/owner_name'
        - $ref: '#/parameters/workflow_name'
        - $ref: '#/parameters/workflow_version'
      responses:
        200:
          description: Return job queues for the specified owner
          schema:
            type: array
    post:
      tags: [Job Queues]
      operationId: app.register_job_queue1
      summary: Register a job queue under a given owner, workflow_name and version
      parameters:
        - $ref: '#/parameters/owner_name'
        - $ref: '#/parameters/workflow_name'
        - $ref: '#/parameters/workflow_version'
        - name: job_queue
          in: body
          schema:
            $ref: '#/definitions/JobQueue'
      responses:
        200:
          description: Workflow created
          schema:
            $ref: '#/definitions/JobQueue'
        409:
          description: Workflow registration failed
  /job_queues/{owner_name}/{job_queue_id}/_action:
    put:
      tags: [Job Queues]
      operationId: app.job_queue_action
      summary: Perform an action on a job queue, eg, pause, resume
      parameters:
        - $ref: '#/parameters/owner_name'
        - $ref: '#/parameters/job_queue_id'
        - name: action
          in: body
          required: true
          schema:
            $ref: '#/definitions/JobQueueAction'
      responses:
        204:
          description: Action performed
  /jobs/{owner_name}/{job_queue_id}:
    get:
      tags: [Jobs]
      operationId: app.get_jobs
      summary: Get jobs in a job queue
      parameters:
        - $ref: '#/parameters/owner_name'
        - $ref: '#/parameters/job_queue_id'
        - name: state
          type: string
          in: query
          enum: ['queued', 'running', 'completed', 'failed', 'paused']
      responses:
        200:
          description: Return jobs
    post:
      tags: [Jobs]
      operationId: app.enqueue_job
      summary: Enqueue a job in a given job queue
      parameters:
        - $ref: '#/parameters/owner_name'
        - $ref: '#/parameters/job_queue_id'
        - name: job_file
          in: body
          schema:
            $ref: '#/definitions/JobFile'
      responses:
        200:
          description: Job enqueued
          schema:
            $ref: '#/definitions/JobFile'
        409:
          description: Job enqueueing failed
  /jobs/{owner_name}/{job_queue_id}/_summary:
    get:
      tags: [Jobs]
      operationId: app.get_job_summary
      summary: Get summary information on jobs in a job queue
      parameters:
        - $ref: '#/parameters/owner_name'
        - $ref: '#/parameters/job_queue_id'
        - name: state
          type: string
          in: query
          enum: ['queued', 'running', 'completed', 'failed', 'paused']
      responses:
        200:
          description: Return jobs
  /jobs/{owner_name}/{job_queue_id}/{job_id}:
    get:
      tags: [Jobs]
      operationId: app.get_job
      summary: Get detail for a given job
      parameters:
        - $ref: '#/parameters/owner_name'
        - $ref: '#/parameters/job_queue_id'
        - name: job_id
          in: path
          type: string
          required: true
          pattern: "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"
      responses:
        200:
          description: Return job
  /jobs/{owner_name}/{job_queue_id}/{job_id}/_action:
    put:
      tags: [Jobs]
      operationId: app.job_action
      summary: Perform an action on a job, eg, pause, resume, cancel ...
      parameters:
        - $ref: '#/parameters/owner_name'
        - $ref: '#/parameters/job_queue_id'
        - $ref: '#/parameters/job_id'
        - name: action
          in: body
          required: true
          schema:
            $ref: '#/definitions/JobAction'
      responses:
        204:
          description: Action performed
  /workers/{owner_name}/{job_queue_id}:
    get:
      tags: [Workers]
      operationId: app.get_workers
      summary: Get workers registered for a job queue
      parameters:
        - $ref: '#/parameters/owner_name'
        - $ref: '#/parameters/job_queue_id'
      responses:
        200:
          description: Return workers
    post:
      tags: [Workers]
      operationId: app.register_worker
      summary: Register a worker for a job queue
      parameters:
        - $ref: '#/parameters/owner_name'
        - $ref: '#/parameters/job_queue_id'
        - name: worker
          in: body
          schema:
            $ref: '#/definitions/Worker'
      responses:
        200:
          description: Worker registered
  /workers/{owner_name}/{job_queue_id}/{worker_id}:
    get:
      tags: [Workers]
      operationId: app.get_worker
      summary: Get detail of a given worker registered for a job queue
      parameters:
        - $ref: '#/parameters/owner_name'
        - $ref: '#/parameters/job_queue_id'
        - $ref: '#/parameters/worker_id'
      responses:
        200:
          description: Return worker
          schema:
            $ref: '#/definitions/Worker'
  /workers/{owner_name}/{job_queue_id}/{worker_id}/_action:
    put:
      tags: [Workers]
      operationId: app.worker_action
      summary: Perform an action on a worker, eg, pause, resume
      parameters:
        - $ref: '#/parameters/owner_name'
        - $ref: '#/parameters/job_queue_id'
        - $ref: '#/parameters/worker_id'
        - name: action
          in: body
          required: true
          schema:
            $ref: '#/definitions/WorkerAction'
      responses:
        204:
          description: Action performed
  /tasks/{owner_name}/{job_queue_id}/{job_id}:
    get:
      tags: [Tasks]
      operationId: app.get_tasks
      summary: List all tasks for a given job
      parameters:
        - $ref: '#/parameters/owner_name'
        - $ref: '#/parameters/job_queue_id'
        - $ref: '#/parameters/job_id'
      responses:
        200:
          description: Return tasks
  /tasks/{owner_name}/{job_queue_id}/_next:
    post:
      tags: [Tasks]
      operationId: app.next_task
      summary: Worker asks for the next task to run
      parameters:
        - $ref: '#/parameters/owner_name'
        - $ref: '#/parameters/job_queue_id'
        - name: worker
          in: body
          schema:
            $ref: '#/definitions/TaskFile'
      responses:
        204:
          description: Task assigned
        404:
          description: No task to run
  /tasks/{owner_name}/{job_queue_id}/{job_id}/_next:
    post:
      tags: [Tasks]
      operationId: app.next_task_from_job
      summary: Worker asks for the next task from a given job to run
      parameters:
        - $ref: '#/parameters/owner_name'
        - $ref: '#/parameters/job_queue_id'
        - $ref: '#/parameters/job_id'
        - name: worker
          in: body
          schema:
            $ref: '#/definitions/TaskFile'
      responses:
        204:
          description: Task assigned
        404:
          description: No task to run
  /tasks/{owner_name}/{job_queue_id}/{job_id}/{task_name}/_complete:
    post:
      tags: [Tasks]
      operationId: app.complete_task
      summary: Worker reports completion of a task
      parameters:
        - $ref: '#/parameters/owner_name'
        - $ref: '#/parameters/job_queue_id'
        - $ref: '#/parameters/job_id'
        - $ref: '#/parameters/task_name'
        - name: action
          in: body
          schema:
            $ref: '#/definitions/TaskAction'
      responses:
        204:
          description: Action performed
  /tasks/{owner_name}/{job_queue_id}/{job_id}/{task_name}/_fail:
    post:
      tags: [Tasks]
      operationId: app.fail_task
      summary: Worker reports failure of a task
      parameters:
        - $ref: '#/parameters/owner_name'
        - $ref: '#/parameters/job_queue_id'
        - $ref: '#/parameters/job_id'
        - $ref: '#/parameters/task_name'
        - name: action
          in: body
          schema:
            $ref: '#/definitions/TaskAction'
      responses:
        204:
          description: Action performed

parameters:
  owner_name:
    name: owner_name
    description: Owner's unique name
    in: path
    type: string
    required: true
    pattern: "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,31}$"
  workflow_name:
    name: workflow_name
    description: Workflow's name
    in: path
    type: string
    required: true
    pattern: "^[a-zA-Z]{1}[a-zA-Z0-9-_.]{2,31}$"
  workflow_version:
    name: workflow_version
    description: Workflow's version
    in: path
    type: string
    required: true
    pattern: "^[a-zA-Z0-9]{1}[a-zA-Z0-9-_.]{1,15}$"
  job_id:
    name: job_id
    description: Unique ID for a job
    in: path
    type: string
    required: true
    pattern: "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"
  job_queue_id:
    name: job_queue_id
    description: Unique ID for a job queue
    in: path
    type: string
    required: true
    pattern: "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"
  worker_id:
    name: worker_id
    description: Unique ID for a worker
    in: path
    type: string
    required: true
    pattern: "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"
  job_name:
    name: job_name
    description: Job's name
    in: path
    type: string
    required: true
    pattern: "^[a-zA-Z0-9]{1}[a-zA-Z0-9-_.]{2,63}$"
  task_name:
    name: task_name
    description: Task's name
    in: path
    type: string
    required: true
    pattern: "^[a-zA-Z0-9]{1}[a-zA-Z0-9-_.]{2,255}$"


definitions:
  JobQueue:
    type: object
    required:
      - name
    properties:
      id:
        type: string
        description: Workflow's unique identifier
        pattern: "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"
        example: "7ebf7fa9-f70f-481a-a499-5fba3f8c5078"
        readOnly: true
      name:
        type: string
        description: Workflow's name
        pattern: "^[a-zA-Z]{1}[a-zA-Z0-9-_]{2,31}$"
        example: "BWA-MEM"
        minLength: 3
        maxLength: 32
      workflow_type:
        type: string
        description: In which language workflow is written
        enum: ["JTracker"]
        example: "JTracker"
        readOnly: true
      tags:
        type: object
        description: Custom tags
      created:
        type: string
        format: date-time
        description: Creation time
        example: "2015-07-07T15:49:51.230+02:00"
        readOnly: true
  JobFile:
    type: object
    required:
      - name
    properties:
      id:
        type: string
        description: Workflow's unique identifier
        pattern: "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"
        example: "7ebf7fa9-f70f-481a-a499-5fba3f8c5078"
        readOnly: true
      name:
        type: string
        description: Workflow's name
        pattern: "^[a-zA-Z0-9]{1}[a-zA-Z0-9-_.]{2,63}$"
        example: "BWA-MEM"
        minLength: 3
        maxLength: 64
  TaskFile:
    type: object
    required:
      - name
    properties:
      id:
        type: string
        description: Workflow's unique identifier
        pattern: "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"
        example: "7ebf7fa9-f70f-481a-a499-5fba3f8c5078"
        readOnly: true
      name:
        type: string
        description: Workflow's name
        pattern: "^[a-zA-Z0-9]{1}[a-zA-Z0-9-_.]{2,255}$"
        example: "BWA-MEM"
        minLength: 3
        maxLength: 256
  Worker:
    type: object
    required:
      - id
    properties:
      id:
        type: string
        description: Workflow's unique identifier
        pattern: "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"
        example: "7ebf7fa9-f70f-481a-a499-5fba3f8c5078"
        readOnly: true
  JobQueueAction:
    type: object
    required:
      - name
    properties:
      id:
        type: string
        description: Workflow's unique identifier
        pattern: "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"
        example: "7ebf7fa9-f70f-481a-a499-5fba3f8c5078"
        readOnly: true
      name:
        type: string
        description: Workflow's name
        pattern: "^[a-zA-Z0-9-_]{3,35}$"
        example: "BWA-MEM"
        minLength: 3
        maxLength: 35
  WorkerAction:
    type: object
    required:
      - name
    properties:
      id:
        type: string
        description: Workflow's unique identifier
        pattern: "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"
        example: "7ebf7fa9-f70f-481a-a499-5fba3f8c5078"
        readOnly: true
      name:
        type: string
        description: Workflow's name
        pattern: "^[a-zA-Z0-9-_]{3,35}$"
        example: "BWA-MEM"
        minLength: 3
        maxLength: 35
  JobAction:
    type: object
    required:
      - name
    properties:
      id:
        type: string
        description: Workflow's unique identifier
        pattern: "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"
        example: "7ebf7fa9-f70f-481a-a499-5fba3f8c5078"
        readOnly: true
      name:
        type: string
        description: Workflow's name
        pattern: "^[a-zA-Z0-9-_]{3,35}$"
        example: "BWA-MEM"
        minLength: 3
        maxLength: 35
  TaskAction:
    type: object
    required:
      - name
    properties:
      id:
        type: string
        description: Workflow's unique identifier
        pattern: "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"
        example: "7ebf7fa9-f70f-481a-a499-5fba3f8c5078"
        readOnly: true
      name:
        type: string
        description: Workflow's name
        pattern: "^[a-zA-Z0-9-_]{3,35}$"
        example: "BWA-MEM"
        minLength: 3
        maxLength: 35

securityDefinitions:
  oauth2:
    type: oauth2
    flow: implicit
    authorizationUrl: https://example.com/oauth2/dialog
    scopes:
      uid: Unique identifier of the user accessing the service.
